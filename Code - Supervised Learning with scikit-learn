from sklearn import datasets
import csv
import re
import pandas as pd
import os
import datetime as dt
import io
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
import seaborn as sns
sns.set()
from bs4 import BeautifulSoup
plt.style.use('ggplot')

# import iris dataset from sklearn
iris = datasets.load_iris()

# print iris keys
print (iris.keys())

# set x, y
x = iris.data
y = iris.target

# create df, scatter matrix df data
df = pd.DataFrame(x, columns=iris.feature_names)
_ = pd.plotting.scatter_matrix(df, c=y, figsize=[8,8], s=150, marker='D')
plt.plot()

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=6)
knn.fit(iris['data'], iris['target'])
KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski', metric_params=None, n_jobs=1,
                    n_neighbors=6, p=2, weights='uniform')
iris['data'].shape

# Import KNeighborsClassifier from sklearn.neighbors
from sklearn.neighbors import KNeighborsClassifier 

# Create arrays for the features and the response variable
y = df['party'].values
X = df.drop('party', axis=1,).values

# Create a k-NN classifier with 6 neighbors: knn
knn = KNeighborsClassifier(n_neighbors=6)

# Fit the classifier to the data
knn.fit(X, y)

# Predict the labels for the training data X
y_pred = knn.predict(X)

# Predict and print the label for the new data point X_new
new_prediction = knn.predict(X_new)
print("Prediction: {}".format(new_prediction))
